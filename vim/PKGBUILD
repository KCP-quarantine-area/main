
pkgname=vim
_topver=7.4
_patchlevel=86
pkgver="${_topver}.${_patchlevel}"
__hgrev=f6940759212d
pkgrel=1
arch=('x86_64')
pkgdesc='Vi Improved, a highly configurable, improved version of the vi text editor.'
license=('custom:vim')
url="http://www.vim.org"
depends=('gpm' 'perl')
makedepends=('python2>=2.7.1' 'ruby' 'libxt' 'libxext' 'libxpm' 'libxmu' 'desktop-file-utils'
             'gettext' 'pkgconfig' 'mercurial' 'rsync' 'sed')
provides=('vim-runtime')
conflicts=('vim-runtime')
source=('pythoncomplete.vim'::"http://www.vim.org/scripts/download_script.php?src_id=10872")
md5sums=('6e7adfbd5d26c1d161030ec203a7f243')

__hgroot='http://vim.googlecode.com/hg/'
__hgrepo='vim'
__hgbranch='default'

_versiondir="vim${_topver//./}"

build() {
  cd "${srcdir}"

  msg2 'Checking out source from Mercurial...'

  if [ -d "${__hgrepo}" ]; then
    cd "${__hgrepo}"
    hg pull -b "${__hgbranch}" || warning 'hg pull failed!'
    hg update -r "${__hgrev}"
  else
    hg clone -b "${__hgbranch}" -u "${__hgrev}" "${__hgroot}${__hgrepo}" "${__hgrepo}"
    cd "${__hgrepo}"
  fi

  if (( $(hg id -n) < $(hg id -nr ${__hgbranch}) )); then
    warning 'You are not building the latest revision!'
    warning "Consider updating __hgrev to $(hg id -r ${__hgbranch})."
    sleep 1
  fi

  cd "${srcdir}"
  rm -rf vim-build 
  rsync -a --exclude=".hg/" "${__hgrepo}/" vim-build

  msg2 'Patching...'

  # define the place for the global vimrc file (set to /etc/vimrc)
  sed -e 's|^.*\(#define SYS_.*VIMRC_FILE.*"\) .*$|\1|' \
      -i vim-build/src/feature.h
  sed -e 's|^.*\(#define VIMRC_FILE.*"\) .*$|\1|' \
      -i vim-build/src/feature.h
  
  (cd vim-build/src && autoconf)

  msg2 'Building...'

  cd "${srcdir}/vim-build"

  ./configure --prefix=/usr --localstatedir=/var/lib/vim \
    --mandir=/usr/share/man --with-compiledby=KaOS \
    --with-features=huge --enable-gpm --enable-acl --with-x=no \
    --disable-gui --enable-multibyte --enable-cscope \
    --disable-netbeans --enable-perlinterp --disable-pythoninterp \
    --disable-rubyinterp
  make
}

package() {
  cd "${srcdir}/vim-build"
  make -j1 VIMRCLOC=/etc DESTDIR="${pkgdir}" install

  # provided by (n)vi in core
  rm "${pkgdir}/usr/bin"/{ex,view}

  # delete some manpages
  find "${pkgdir}/usr/share/man" -type d -name 'man1' 2>/dev/null | \
    while read _mandir; do
    cd "${_mandir}"
    rm -f ex.1 view.1 # provided by (n)vi
    rm -f evim.1    # this does not make sense if we have no GUI
  done

  # license
  install -d -m755 "${pkgdir}/usr/share/licenses/vim"
  ln -s "/usr/share/vim/${_versiondir}/doc/uganda.txt" \
        "${pkgdir}/usr/share/licenses/vim/license.txt"
}
